{
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "window.zoomLevel": 0,
    "files.autoSave": "afterDelay",
    "window.menuBarVisibility": "default",
    "workbench.activityBar.visible": true,
    "vim.easymotion": true,
    "vim.sneak": true,
    "vim.visualstar": true,
    "vim.ignorecase": false,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.leader": ",",
    // 以下为自定义的快捷方式, 在所有的编辑器和IDE中都应该具备这种语义 此即为IDE要素
    // 动作族 j:jump n:next o:open c: close  f: focus
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<leader>",
                "f",
                "n"
            ],
            "commands": [
                "extension.advancedNewFile"
            ],
        },
        {
            "before": [
                "<leader>",
                "t",
                "r"
            ],
            "commands": [
                "replacerules.runRule"
            ],
        },
        {
            "before": [
                "<leader>",
                "f",
                "f",
            ],
            "commands": [
                "workbench.files.action.focusFilesExplorer"
            ]
        },
        {
            "before": [
                "<leader>",
                "m",
                "m",
            ],
            "commands": [
                "workbench.action.toggleEditorWidths",
            ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "f",
            ],
            "commands": [
                "workbench.files.action.focusFilesExplorer"
            ]
        },
        {
            "before": [
                "<leader>",
                "c",
                "o",
                "e",
            ],
            "commands": [
                "workbench.action.closeOtherEditors"
            ]
        },
        {
            "before": [
                "<leader>",
                "o",
                "s",
            ],
            "commands": [
                "workbench.action.openSettingsJson"
            ]
        },
        {
            "before": [
                "<leader>",
                "o",
                "k",
            ],
            "commands": [
                "workbench.action.openGlobalKeybindings"
            ]
        },
        {
            // 当使用matchit时 vim 的y无法使用 只能自己在定义一个?
            "before": [
                "<leader>",
                "y",
            ],
            "commands": [
                "editor.action.clipboardCopyAction"
            ]
        },
        {
            "before": [
                "<leader>",
                "x",
                "m",
            ],
            "commands": [
                "workbench.action.showCommands"
            ]
        },
        {
            // 注释/取消注释当前代码
            "before": [
                "<leader>",
                "c",
                "i"
            ],
            "commands": [
                "editor.action.commentLine"
            ]
        },
        {
            // 在当前项目中查找 
            "before": [
                "<leader>",
                "q",
                "q"
            ],
            "commands": [
                "workbench.action.findInFiles"
            ]
        },
        {
            // 在当前文件中查找 
            "before": [
                "<leader>",
                "s",
                "s"
            ],
            "commands": [
                "actions.find"
            ]
        },
        {
            // format当前文件
            "before": [
                "<leader>",
                "f",
                "m"
            ],
            "commands": [
                "editor.action.formatDocument"
            ]
        },
        {
            // go to symbol in worksapce
            "before": [
                "<leader>",
                "a",
                "i"
            ],
            "commands": [
                "workbench.action.showAllSymbols"
            ]
        },
        {
            // go to symbol
            "before": [
                "<leader>",
                "i",
                "i"
            ],
            "commands": [
                "workbench.action.gotoSymbol"
            ]
        },
        {
            // editor.action.rename
            "before": [
                "<leader>",
                "r",
                "n"
            ],
            "commands": [
                "editor.action.rename"
            ]
        },
        {
            // find all reference
            "before": [
                "<leader>",
                "f",
                "r"
            ],
            "commands": [
                "references-view.find"
            ]
        },
        {
            // 打开当前项目中的文件
            "before": [
                "<leader>",
                "k",
                "k"
            ],
            "commands": [
                "workbench.action.quickOpen"
            ]
        },
        {
            // 跳转至定义
            "before": [
                "<leader>",
                "j",
                "d"
            ],
            "commands": [
                "editor.action.revealDefinition",
            ]
        },
        {
            //  切换到右边的tab
            "before": [
                "<leader>",
                "m",
                "l"
            ],
            "commands": [
                "workbench.action.nextEditor"
            ]
        },
        {
            //  切换到左边的tab
            "before": [
                "<leader>",
                "m",
                "h"
            ],
            "commands": [
                "workbench.action.previousEditor"
            ]
        },
        {
            // close sidebar
            "before": [
                "<leader>",
                "c",
                "s"
            ],
            "commands": [
                "workbench.action.toggleSidebarVisibility"
            ]
        },
        {
            // 关闭当前文档
            "before": [
                "<leader>",
                "c",
                "e"
            ],
            "commands": [
                "workbench.action.closeActiveEditor"
            ]
        },
        {
            // 在右边分裂窗口
            "before": [
                "<leader>",
                "x",
                "3"
            ],
            "commands": [
                "workbench.action.splitEditorRight"
            ]
        },
        {
            // show quick fix
            "before": [
                "<leader>",
                "s",
                "f"
            ],
            "commands": [
                "editor.action.quickFix"
            ]
        },
        {
            // 显示文档 效果和手动hover一致
            "before": [
                "<leader>",
                "s",
                "h"
            ],
            "commands": [
                "editor.action.showHover"
            ]
        },
        {
            // jump to define 跳转到定义
            "before": [
                "<leader>",
                "j",
                "d"
            ],
            "commands": [
                "editor.action.revealDefinition"
            ]
        },
        {
            // jump to current 跳转回去 使用跳转定义跳到其他文件之后在跳回去
            "before": [
                "<leader>",
                "j",
                "b"
            ],
            "commands": [
                "workbench.action.navigateBack"
            ]
        },
        {
            // jump to pre 跳转到下面使用当前符号的地方
            "before": [
                "<leader>",
                "j",
                "n"
            ],
            "commands": [
                "editor.action.wordHighlight.next"
            ]
        },
        {
            // easy motion
            // jump to motion
            "before": [
                "<leader>",
                "<leader>",
                "j",
            ],
            // TODO it should use commands
            "after": [
                "leader",
                "leader",
                "leader",
                "b",
                "d",
                "w"
            ]
        },
        {
            // jump to next 跳转到上面使用当前符号的地方
            "before": [
                "<leader>",
                "j",
                "p"
            ],
            "commands": [
                "editor.action.wordHighlight.prev"
            ]
        },
        {
            // editor.action.addSelectionToNextFindMatch
            "before": [
                "<leader>",
                "s",
                "n"
            ],
            "commands": [
                "editor.action.addSelectionToNextFindMatch"
            ]
        },
        {
            // 焦点切换到左边的窗口 ,下面一样
            "before": [
                "<leader>",
                "w",
                "h"
            ],
            "after": [
                "<C-w>",
                "h"
            ]
        },
        {
            "before": [
                "<leader>",
                "w",
                "j"
            ],
            "after": [
                "<C-w>",
                "j"
            ]
        },
        {
            "before": [
                "<leader>",
                "w",
                "k"
            ],
            "after": [
                "<C-w>",
                "k"
            ]
        },
        {
            "before": [
                "<leader>",
                "w",
                "l"
            ],
            "after": [
                "<C-w>",
                "l"
            ]
        },
        // 切换焦点结束
        {
            "before": [
                "<leader>",
                "r",
                "l"
            ],
            "commands": [
                "extension.rerunLastCommand"
            ]
        },
        {
            "before": [
                "<leader>",
                "j",
                "l"
            ],
            "commands": [
                "workbench.action.navigateToLastEditLocation"
            ]
        },
        {
            "before": [
                "%"
            ],
            "commands": [
                "extension.matchitJumpItems"
            ]
        },
        {
            "before": [
                "<leader>",
                "s",
                "i"
            ],
            "commands": [
                "extension.matchitSelectItems"
            ]
        },
        {
            "before": [
                "<leader>",
                "d",
                "i"
            ],
            "commands": [
                "extension.matchitDeleteItems"
            ]
        },
        {
            "before": [
                "<leader>",
                "x",
                "f"
            ],
            "commands": [
                "workbench.action.files.openFile"
            ]
        },
        {
            "before": [
                "<leader>",
                "r",
                "r"
            ],
            "commands": [
                "workbench.action.openRecent"
            ]
        },
        {
            "before": [
                "<leader>",
                "x",
                "1"
            ],
            "commands": [
                "workbench.action.editorLayoutSingle"
            ]
        },
        {
            "before": [
                "<leader>",
                "x",
                "2"
            ],
            "commands": [
                "workbench.action.splitEditorDown"
            ]
        },
        {
            "before": [
                "<leader>",
                "x",
                "4"
            ],
            "commands": [
                "workbench.action.editorLayoutTwoByTwoGrid"
            ]
        },
        {
            "before": [
                "<leader>",
                "x",
                "0"
            ],
            "commands": [
                "workbench.action.closeGroup"
            ]
        },
        {
            "before": [
                "<leader>",
                "z",
                "m"
            ],
            "commands": [
                "workbench.action.toggleZenMode"
            ]
        },
        {
            "before": [
                "<leader>",
                "w",
                "q"
            ],
            "after": [
                ":wq"
            ],
        },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<leader>",
                "s",
                "c",
            ],
            "commands": [
                "surround.with"
            ]
        },
        {
            "before": [
                "<leader>",
                "x",
                "m"
            ],
            "commands": [
                "workbench.action.showCommands"
            ]
        },
        {
            // 注释/取消注释当前代码
            "before": [
                "<leader>",
                "c",
                "i"
            ],
            "commands": [
                "editor.action.commentLine"
            ]
        },
        {
            // 在整个项目/worksapace中查找
            "before": [
                "<leader>",
                "q",
                "q"
            ],
            "commands": [
                "workbench.action.findInFiles"
            ]
        },
        {
            // 在当前文件中查找
            "before": [
                "<leader>",
                "s",
                "s"
            ],
            "commands": [
                "actions.find"
            ]
        },
        {
            // editor.action.addSelectionToNextFindMatch
            "before": [
                "<leader>",
                "s",
                "n"
            ],
            "commands": [
                "editor.action.addSelectionToNextFindMatch"
            ]
        },
        {
            // jump to pre 搜索并替换当前选择的字符串
            "before": [
                "<leader>",
                "r",
                "r"
            ],
            "commands": [
                "editor.action.startFindReplaceAction",
                "toggleFindInSelection",
            ]
        },
        {
            // jump to pre 搜索并替换当前选择的字符串
            "before": [
                "<leader>",
                "r",
                "s"
            ],
            "commands": [
                "editor.action.startFindReplaceAction",
            ]
        },
    ],
    // golang config
    "go.useLanguageServer": true,
    "[go]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
        },
        "editor.defaultFormatter": "golang.go",
    },
    "[go.mod]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
        },
    },
    "gopls": {
        // Add parameter placeholders when completing a function.
        "usePlaceholders": true,
        // If true, enable additional analyses with staticcheck.
        // Warning: This will significantly increase memory usage.
        "staticcheck": false,
    },
    "debug.allowBreakpointsEverywhere": true,
    "workbench.colorTheme": "Quiet Light",
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\cmd.exe",
    "terminal.integrated.shellArgs.windows": [
        "/bin/xhere",
        "/bin/zsh"
    ],
    "terminal.integrated.cwd": "${fileDirname}",
    "editor.tabCompletion": "on",
    "files.maxMemoryForLargeFilesMB": 8192,
    "editor.snippetSuggestions": "top",
    "files.autoGuessEncoding": true,
    "editor.fontFamily": "hack,Iosevka,monospace",
    "go.autocompleteUnimportedPackages": true,
    "debug.console.fontFamily": "Iosevka",
    "editor.fontSize": 16,
    "rust-analyzer.updates.askBeforeDownload": false,
    "rust-analyzer.updates.channel": "nightly",
    "terminal.integrated.fontFamily": "Iosevka,monospace",
    "C_Cpp.updateChannel": "Insiders",
    "diffEditor.ignoreTrimWhitespace": false,
    "replacerules.rules": {
        "split-line-with-comma": {
            "literal": true,
            "find": ",",
            "replace": ",\n"
        },
        "convert-slash": {
            "literal": true,
            "find": "\\",
            "replace": "\\\\"
        },
        "slash-windows-to-unix": {
            "literal": true,
            "find": "//",
            "replace": "/"
        },
        "revert-slash-left-to-right": {
            "literal": true,
            "find": "\\",
            "replace": "/"
        },
        "revert-convert-quote": {
            "literal": true,
            "find": "\\\"",
            "replace": "\""
        },
        "convert-quote": {
            "literal": true,
            "find": "\"",
            "replace": "\\\""
        },
        "remove-quote": {
            "literal": true,
            "find": "\"",
            "replace": ""
        }
    },
    "surround.custom": {
        "call": {
            "label": "call",
            "description": "",
            "snippet": "$1($TM_SELECTED_TEXT)",
        },
        "jslog": {
            "label": "jslg",
            "description": "",
            "snippet": "console.log(\"$TM_SELECTED_TEXT\",JSON.stringify($TM_SELECTED_TEXT,null,4))"
        },
        "jsonstringify": {
            "label": "jsf",
            "description": "",
            "snippet": "JSON.stringify($TM_SELECTED_TEXT,null,4)"
        },
        "try": {
            "label": "try",
            "description": "",
            "snippet": "Promise<$TM_SELECTED_TEXT>"
        },
        "promise": {
            "label": "type-promise",
            "description": "",
            "snippet": "Promise<$TM_SELECTED_TEXT>"
        },
        "quote": {
            "label": "quote",
            "description": "\"\"",
            "snippet": "\"$TM_SELECTED_TEXT\""
        },
        "brackce": {
            "label": "brackce",
            "description": "{}",
            "snippet": "{$TM_SELECTED_TEXT}"
        },
        "node-forof": {
            "label": "node-for-of",
            "description": "node-for-or",
            "snippet": "for (const item of $TM_SELECTED_TEXT){\n$0}"
        },
        "rust-rawstring": {
            "label": "rawstring",
            "description": "rawstring",
            "snippet": "r#$TM_SELECTED_TEXT#"
        },
        "rust-format": {
            "label": "rust-format-string",
            "description": "add format! macro",
            "snippet": "format!($TM_SELECTED_TEXT,$0)"
        },
        "golang-warpper-error": {
            "label": "golang-warpper-error",
            "description": "golang-warpper-error",
            "snippet": "($TM_SELECTED_TEXT,error)"
        },
        "golang-unsafe-pointer": {
            "label": "golang-unsafe-pointer",
            "description": "",
            "snippet": "unsafe.Pointer($TM_SELECTED_TEXT)"
        },
        "golang-pl": {
            "label": "golang-log",
            "description": "",
            "snippet": "Log().Infof(\"%v\",$TM_SELECTED_TEXT)"
        },
        "golang-format": {
            "label": "golang-format-string",
            "description": "golang-format-string",
            "snippet": "fmt.Sprintf($TM_SELECTED_TEXT,\"$0\")"
        },
        "cpp-if": {
            "label": "cpp-if",
            "description": "cpp-if",
            "snippet": "if ($TM_SELECTED_TEXT) \n{\n$1\n}"
        },
    },
    "files.associations": {
        "*.json": "jsonc"
    },
    "vim.easymotionMarkerBackgroundColor": "green",
    "editor.quickSuggestions": true,
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "tabnine.experimentalAutoImports": true,
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "todo-tree.tree.showScanModeButton": false,
    "dateTime.showDayOfMonth": true,
    "dateTime.showMonth": true,
    "dateTime.use24HourClock": true,
    "dateTime.customFormat": "YYYY-MM-DD ddd HH:mm",
    "dateTime.showAMPM": true,
    "dateTime.locale": "zh-cn",
    "typescript.preferences.includePackageJsonAutoImports": "on",
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "cSpell.userWords": [
        "auxre",
        "codegen",
        "eval",
        "inmemory",
        "keyof",
        "kubectl",
        "mongodump",
        "testhub",
        "worktile"
    ],
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "zenMode.hideTabs": false,
    "extensions.ignoreRecommendations": false,
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.preferences.importModuleSpecifierEnding": "minimal",
    "gohome.minute": 30,
    "git.ignoredRepositories": [
        "/home/oaa/ns/share/blog",
        "/home/oaa/sm/ns/share/blog"
    ],
    "markdown-preview-enhanced.liveUpdate": true,
    "go.languageServerExperimentalFeatures": {
        "diagnostics": true,
        "documentLink": true
    },
    "terminal.integrated.shell.linux": "/bin/zsh",
    "cSpell.enabled": false,
    "gitlens.views.repositories.enabled": true,
    "gitlens.views.repositories.files.layout": "list",
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "NOTE",
        "[ ]",
        "[x]"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    "workbench.editorAssociations": [
        {
            "viewType": "jupyter.notebook.ipynb",
            "filenamePattern": "*.ipynb"
        }
    ],
    "surround.with.arrowFunction": {
        "label": "arrowFunction",
        "disabled": true,
    },
    "todo-tree.highlights.customHighlight": {
        "TODO": {
            "icon": "check",
            "type": "line"
        },
        "NOTE": {
            "icon": "question",
            "type": "line"
        },
        "FIXME": {
            "foreground": "black",
            "iconColour": "yellow",
            "gutterIcon": true
        }
    },
    "go.formatTool": "goimports",
    "go.toolsManagement.autoUpdate": true,
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    }
}